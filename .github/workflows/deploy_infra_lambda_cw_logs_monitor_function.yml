name: "[_CD] CloudWatch Logs Monitor Lambda deploy function"
concurrency:
  group: ${{ github.workflow }}-${{ inputs.subsystem }}-cw-logs-monitor-${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true

on:
  workflow_call:
    secrets:
      MC_DEPLOY_IAM_ROLE_ARN:
        required: true
        description: "The IAM role ARN to assume for deployment"
    inputs:
      tenancy:
        type: string
        required: true
        description: "The tenancy to deploy to."
      subsystem:
        type: string
        required: true
        description: "The subsystem to run the deploy for."
      aws-account:
        type: string
        required: true
        description: "The AWS account to deploy to."
      aws-region:
        type: string
        required: true
        description: "The AWS region to deploy to."
      env:
        type: string
        required: true
        description: "The environment to deploy to."
      short-env:
        type: string
        required: true
        description: "The short environment to deploy to."
      working-directory:
        type: string
        required: true
        description: "The working directory to run the deploy in."

jobs:
  cw-logs-monitor-deploy-function:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    timeout-minutes: 60

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.MC_DEPLOY_IAM_ROLE_ARN }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR (us-east-1)
        id: login-ecr-us-east-1
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_REGION: us-east-1
        with:
          registry-type: public

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to Amazon ECR (default region)
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ECRの更新
      - name: build and push Docker image app
        uses: docker/build-push-action@v6
        id: build-image-app
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.tenancy }}-${{ inputs.short-env }}-${{ inputs.subsystem }}-cw-logs-monitor
        with:
          push: true
          context: ./${{ inputs.working-directory }}
          file: ${{ inputs.working-directory }}/Dockerfile
          platforms: linux/arm64
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: |
            type=gha,scope=cw-logs-monitor-cache
          cache-to: |
            ${{ github.ref == 'refs/heads/develop' && 'type=gha,mode=max,scope=cw-logs-monitor-cache' || '' }}
          provenance: false

      - name: Deploy Lambda function
        id: deploy-lambda-function
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.tenancy }}-${{ inputs.short-env }}-${{ inputs.subsystem }}-cw-logs-monitor
        run: |
          aws lambda update-function-code \
            --function-name ${{ inputs.tenancy }}-${{ inputs.short-env }}-${{ inputs.subsystem }}-cw-logs-monitor \
            --image-uri ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} \
            --region ${{ inputs.aws-region }}
